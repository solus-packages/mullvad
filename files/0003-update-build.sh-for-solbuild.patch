From e1b9ee8eb2fda490c4dd676fb803684149e867b5 Mon Sep 17 00:00:00 2001
From: Cory Forsstrom <cforsstrom18@gmail.com>
Date: Sat, 17 Apr 2021 13:16:09 -0700
Subject: [PATCH 3/3] update build.sh for solbuild

---
 build.sh              | 66 +++++++++++++++++++++----------------------
 update-api-address.sh |  2 +-
 update-relays.sh      |  2 +-
 3 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/build.sh b/build.sh
index 3a3139376..64b3a202f 100755
--- a/build.sh
+++ b/build.sh
@@ -13,7 +13,7 @@ set -eu
 
 SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
 cd "$SCRIPT_DIR"
-RUSTC_VERSION=$(rustc +stable --version)
+RUSTC_VERSION=$(rustc --version)
 PRODUCT_VERSION=$(node -p "require('./gui/package.json').version" | sed -Ee 's/\.0//g')
 CARGO_TARGET_DIR=${CARGO_TARGET_DIR:-"target"}
 
@@ -43,12 +43,12 @@ if [[ "$(uname -s)" == "Darwin" && -z ${TARGET:-""} ]]; then
 fi
 
 if [[ "$BUILD_MODE" == "release" ]]; then
-    if [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]]; then
-        echo "Dirty working directory!"
-        echo "You should only build releases in clean working directories in order to make it"
-        echo "easier to reproduce the same build."
-        exit 1
-    fi
+    # if [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]]; then
+    #     echo "Dirty working directory!"
+    #     echo "You should only build releases in clean working directories in order to make it"
+    #     echo "easier to reproduce the same build."
+    #     exit 1
+    # fi
 
     if [[ "$(uname -s)" == "Darwin" || "$(uname -s)" == "MINGW"* ]]; then
         echo "Configuring environment for signing of binaries"
@@ -82,19 +82,19 @@ else
     export CSC_IDENTITY_AUTO_DISCOVERY=false
 fi
 
-product_version_commit_hash=$(git rev-parse "$PRODUCT_VERSION^{commit}" || echo "")
-current_head_commit_hash=$(git rev-parse "HEAD^{commit}")
-if [[ "$BUILD_MODE" == "dev" || $product_version_commit_hash != "$current_head_commit_hash" ]]; then
-    PRODUCT_VERSION="$PRODUCT_VERSION-dev-${current_head_commit_hash:0:6}"
-    echo "Modifying product version to $PRODUCT_VERSION"
+# product_version_commit_hash=$(git rev-parse "$PRODUCT_VERSION^{commit}" || echo "")
+# current_head_commit_hash=$(git rev-parse "HEAD^{commit}")
+# if [[ "$BUILD_MODE" == "dev" || $product_version_commit_hash != "$current_head_commit_hash" ]]; then
+#     PRODUCT_VERSION="$PRODUCT_VERSION-dev-${current_head_commit_hash:0:6}"
+#     echo "Modifying product version to $PRODUCT_VERSION"
 
-    echo "Disabling Apple notarization (macOS only) of installer in this dev build"
-    NPM_PACK_ARGS+=(--no-apple-notarization)
-else
-    echo "Removing old Rust build artifacts"
-    cargo +stable clean
-    CARGO_ARGS+=(--locked)
-fi
+#     echo "Disabling Apple notarization (macOS only) of installer in this dev build"
+#     NPM_PACK_ARGS+=(--no-apple-notarization)
+# else
+#     echo "Removing old Rust build artifacts"
+#     cargo +stable clean
+#     CARGO_ARGS+=(--locked)
+# fi
 
 if [[ "${TARGET:-""}" == "aarch64-apple-darwin" ]]; then
     NPM_PACK_ARGS+=(--arm64)
@@ -199,7 +199,7 @@ function build() {
         CARGO_TARGET_ARG+=(--target="$current_target")
     fi
 
-    cargo +stable build "${CARGO_TARGET_ARG[@]}" "${CARGO_ARGS[@]}" --release
+    cargo build "${CARGO_TARGET_ARG[@]}" "${CARGO_ARGS[@]}" --release
 
     ################################################################################
     # Move binaries to correct locations in dist-assets
@@ -251,7 +251,7 @@ if [[ "$(uname -s)" == "Darwin" || "$(uname -s)" == "Linux" ]]; then
     mkdir -p "dist-assets/shell-completions"
     for sh in bash zsh fish; do
         echo "Generating shell completion script for $sh..."
-        cargo +stable run --bin mullvad "${CARGO_ARGS[@]}" --release -- shell-completions "$sh" \
+        cargo run --bin mullvad "${CARGO_ARGS[@]}" --release -- shell-completions "$sh" \
             "dist-assets/shell-completions/"
     done
 fi
@@ -293,18 +293,18 @@ esac
 
 popd
 
-SEMVER_VERSION=$(echo "$PRODUCT_VERSION" | sed -Ee 's/($|-.*)/.0\1/g')
-for semver_path in dist/*"$SEMVER_VERSION"*; do
-    product_path=$(echo "$semver_path" | sed -Ee "s/$SEMVER_VERSION/$PRODUCT_VERSION/g")
-    echo "Moving $semver_path -> $product_path"
-    mv "$semver_path" "$product_path"
-
-    if [[ "$BUILD_MODE" == "release" && "$(uname -s)" == "MINGW"* && "$product_path" == *.exe ]]
-    then
-        # sign installer
-        sign_win "$product_path"
-    fi
-done
+# SEMVER_VERSION=$(echo "$PRODUCT_VERSION" | sed -Ee 's/($|-.*)/.0\1/g')
+# for semver_path in dist/*"$SEMVER_VERSION"*; do
+#     product_path=$(echo "$semver_path" | sed -Ee "s/$SEMVER_VERSION/$PRODUCT_VERSION/g")
+#     echo "Moving $semver_path -> $product_path"
+#     mv "$semver_path" "$product_path"
+
+#     if [[ "$BUILD_MODE" == "release" && "$(uname -s)" == "MINGW"* && "$product_path" == *.exe ]]
+#     then
+#         # sign installer
+#         sign_win "$product_path"
+#     fi
+# done
 
 echo "**********************************"
 echo ""
diff --git a/update-api-address.sh b/update-api-address.sh
index 5013a56f6..e0e27a5d2 100755
--- a/update-api-address.sh
+++ b/update-api-address.sh
@@ -3,4 +3,4 @@
 echo "Updating API address cache..."
 set -e
 
-cargo +stable run --bin address_cache --release > dist-assets/api-ip-address.txt
+cargo run --bin address_cache --release > dist-assets/api-ip-address.txt
diff --git a/update-relays.sh b/update-relays.sh
index 1faa54b99..78f693750 100755
--- a/update-relays.sh
+++ b/update-relays.sh
@@ -3,4 +3,4 @@
 echo "Updating relay list..."
 set -e
 
-cargo +stable run --bin relay_list --release > dist-assets/relays.json
+cargo run --bin relay_list --release > dist-assets/relays.json
-- 
2.32.0

